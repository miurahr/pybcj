[project]
name = "pybcj"
requires-python = ">=3.8"
description = "bcj filter library"
keywords = ["lzma", "bcj"]
readme = "README.rst"
license = {text = "LGPL-2.1-or-later"}
authors = [
    {name = "Hiroshi Miura", email = "miurahr@linux.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic=["version"]

[project.optional-dependencies]
test = [
    "pytest>=6.0",
    "pytest-cov",
    "hypothesis",
    "coverage[toml]>=5.2",
]
check = [
    "mypy>=0.812",
    "mypy_extensions>=0.4.3",
    "check-manifest",
    "flake8<5",
    "flake8-black",
    "flake8-colors",
    "flake8-isort",
    "flake8-pyi",
    "flake8-typing-imports",
    "readme-renderer",
    "pygments",
]

[project.urls]
Source = "https://codeberg.org/miurahr/pybcj"

[build-system]
requires = ["setuptools>=58", "wheel", "setuptools_scm[toml]>=6.0.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
local_scheme = "no-local-version"

[tool.coverage.run]
branch = true
parallel = true
source = ["bcj"]

[tool.coverage.report]
show_missing = true
exclude_lines = ["if __name__ == .__main__.:", "pragma: no-cover", "@abstract", "def __repr__"]

[tool.black]
line-length = 125
target-version = ['py310']

[tool.isort]
known_first_party = ["bcj", "_bcj"]
known_third_party = ["docutils","flake8","pyannotate_runtime","pytest","pytz","setuptools","sphinx","yaml"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 125

[tool.cibuildwheel]
skip = ["pp*", "*-win32", "*-manylinux_i686", "*-musllinux_i686"]
manylinux-x86_64-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
manylinux-ppc64le-image = "manylinux2014"
manylinux-s390x-image = "manylinux2014"

musllinux-x86_64-image = "musllinux_1_1"
musllinux-aarch64-image = "musllinux_1_1"
musllinux-ppc64le-image = "musllinux_1_1"
musllinux-s390x-image = "musllinux_1_1"

[tool.cibuildwheel.linux]
archs = ["auto64", "aarch64"]

[tool.cibuildwheel.macos]
archs = ["auto64", "universal2"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{37,38,39,310,311,312}, pypy3, check, mypy
isolated_build=True

[testenv]
passenv =
 PYTEST_ADDOPTS
 SETUPTOOLS_USE_DISTUTILS
extras = test
commands = python -m pytest -vv -s

[testenv:check]
extras = check
commands =
    check-manifest {toxinidir}
    flake8 src tests setup.py

[testenv:mypy]
extras = check
commands = mypy src/bcj

[mypy]
warn_redundant_casts = True
warn_unused_ignores = True
strict_optional = True
show_column_numbers = True

[mypy-bcj.*]
ignore_missing_imports = True

[pytest]
python_files = test*.py
norecursedirs = .git _build tmp* .eggs
addopts =

"""
