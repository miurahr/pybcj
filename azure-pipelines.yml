# Variable 'python.version' was defined in the Variables tab
# Multi-job configuration must be converted to matrix strategy: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/phases?view=azure-devops&tabs=yaml#multi-job-configuration
variables:
- name: BuildParameters.versionSpec
  value: $(python.version)
trigger:
  branches:
    include:
    - releases/*
    - main
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main
jobs:
- job: Job_5
  displayName: Check and build sdist
  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python $(python.version)
    inputs:
      versionSpec: $(BuildParameters.versionSpec)
      disableDownloadFromRegistry: true
  - task: Bash@3
    displayName: Install dependencies and run tox
    inputs:
      targetType: inline
      script: >-
        python -m pip install --upgrade pip setuptools setuptools_scm[toml] coverage[toml] tox importlib_metadata build
        python -m tox -e py
        python -m build --sdist
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: wheelhouse'
    inputs:
      PathtoPublish: dist
      ArtifactName: wheelhouse
- job: Job_1
  displayName: linux
  dependsOn: Job_5
  pool:
    name: Azure Pipelines
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python 3.x
    inputs:
      disableDownloadFromRegistry: true
  - task: Bash@3
    displayName: Install dependencies
    inputs:
      targetType: inline
      script: >
        set -o errexit
        python3 -m pip install --upgrade pip
        pip3 install cibuildwheel==2.8.1
  - task: Bash@3
    displayName: Build wheels
    inputs:
      targetType: inline
      script: cibuildwheel --output-dir wheelhouse .
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    inputs:
      PathtoPublish: wheelhouse
      ArtifactName: wheelhouse
- job: Job_2
  displayName: macos
  dependsOn: Job_5
  pool:
    name: Azure Pipelines
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python 3.x
    inputs:
      disableDownloadFromRegistry: true
  - task: Bash@3
    displayName: Install dependencies
    inputs:
      targetType: inline
      script: >
        set -o errexit
        python3 -m pip install --upgrade pip
        python3 -m pip install cibuildwheel==2.8.0
  - task: Bash@3
    displayName: Build wheels
    inputs:
      targetType: inline
      script: >
        cibuildwheel --output-dir wheelhouse .
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    inputs:
      PathtoPublish: wheelhouse
      ArtifactName: wheelhouse
- job: Job_3
  displayName: windows
  dependsOn: Job_5
  pool:
    name: Azure Pipelines
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python 3.x
    inputs:
      disableDownloadFromRegistry: true
  - task: Bash@3
    displayName: Install dependecies
    inputs:
      targetType: inline
      script: >
        set -o errexit
        python -m pip install --upgrade pip
        pip install cibuildwheel==2.8.0
  - task: Bash@3
    displayName: Build wheels
    inputs:
      targetType: inline
      script: cibuildwheel --output-dir wheelhouse .
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    inputs:
      PathtoPublish: wheelhouse
      ArtifactName: wheelhouse
- job: Job_6
  displayName: linux(aarch64)
  dependsOn: Job_5
  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python 3.x
  - task: DockerInstaller@0
    displayName: Install Docker 20.10.17
    inputs:
      dockerVersion: 20.10.17
  - task: Bash@3
    displayName: Install dependencies and qemu
    inputs:
      targetType: inline
      script: >
        set -o errexit
        python3 -m pip install --upgrade pip
        docker pull tonistiigi/binfmt:latest
        docker run --rm --privileged tonistiigi/binfmt:latest --install arm64
        pip3 install cibuildwheel==2.8.1
  - task: Bash@3
    displayName: Build wheels
    inputs:
      targetType: inline
      script: cibuildwheel --output-dir wheelhouse .
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    inputs:
      PathtoPublish: wheelhouse
      ArtifactName: wheelhouse
- job: Job_4
  displayName: Publish to PyPI
  dependsOn:
  - Job_1
  - Job_2
  - Job_3
  - Job_6
  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
    clean: true
  - task: UsePythonVersion@0
    displayName: Use Python 3.x
  - task: DownloadBuildArtifacts@1
    displayName: Download Build Artifacts
    inputs:
      artifactName: wheelhouse
      itemPattern: >
        **
      downloadPath: wheelhouse
  - task: Bash@3
    displayName: Install Dependencies
    inputs:
      targetType: inline
      script: >
        python -m pip install twine
  - task: TwineAuthenticate@1
    displayName: Twine Authenticate (testpypi)
    condition: and(not(startsWith(variables['build.sourceBranch'], 'refs/tags/v')), startsWith(variables['build.sourceBranch'], 'refs/heads/releases/'))
    inputs:
      pythonUploadServiceConnection: 19520ce1-546c-448b-a3be-84934a41e69a
  - task: Bash@3
    displayName: Upload to Python Package Index(test)
    condition: and(succeeded(), not(startsWith(variables['build.sourceBranch'], 'refs/tags/v')), startsWith(variables['build.sourceBranch'], 'refs/heads/releases/'))
    inputs:
      targetType: inline
      script: >+
        python -m twine upload  --repository testpypi --config-file $(PYPIRC_PATH) wheelhouse/wheelhouse/*
  - task: TwineAuthenticate@1
    displayName: Twine Authenticate (pypi)
    condition: startsWith(variables['build.sourceBranch'], 'refs/tags/v')
    inputs:
      pythonUploadServiceConnection: d76a2da1-abd3-4c13-8fd8-b5b6ddc9ca9b
  - task: Bash@3
    displayName: Upload to Python Package Index
    condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/v'))
    inputs:
      targetType: inline
      script: >+
        python -m twine upload  --repository pypi --config-file $(PYPIRC_PATH) wheelhouse/wheelhouse/*
